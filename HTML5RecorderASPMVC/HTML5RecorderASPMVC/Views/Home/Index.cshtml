@{
    ViewBag.Title = "Home Page";
}
<div class="row">
    <div class="col-md-12">
        <a href="//online-voice-recorder.com" class="app_logo">
            <img src="//static.123apps.com/i/glyphs/vrecorder.svg" alt="Online Voice Recorder" class="title-image" style="width:60px;">
            <div class="title" style="margin-left:70px; margin-top:10px;">
                <div class="row_1">Voice Recorder</div>
                <div class="row_2">online</div>
            </div>
        </a>
    </div>
</div>
<br />
<div class="jumbotron" style="height:300px;">
    <p style="color:white; font-size:15px; text-align:center;" id="formats">Click the button to start recording...</p>
    <div id="controls" style="text-align:center;">
        <button id="recordButton" type="button" class="btn btn-danger btn-lg">Record</button>
        <button id="pauseButton" type="button" class="btn btn-danger btn-lg" disabled>Pause</button>
        <button id="stopButton" type="button" class="btn btn-danger btn-lg" disabled>Stop</button>
    </div>
    <ol id="recordingsList" style="text-align:center; list-style-type: none; display:initial;"></ol>
</div>
<br /><br />
<div class="row">
    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
        <div class="block vrecorder">
            <img src="//static.123apps.com/i/glyphs/vrecorder.svg" alt="Online Voice Recorder" class="title-image">
            <div class="cnt">
                <div class="h">Online Voice Recorder</div>
                <div class="p">
                    Our Voice Recorder is a convenient and simple online tool that can be used right in your browser. It allows you to record your voice using a microphone and save it as an mp3 file.
                </div>
                <br /><br />
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
        <div class="block free">
            <img src="//static.123apps.com/i/index_blocks/free.svg" alt="Free to use" class="title-image">
            <div class="cnt">
                <div class="h">Free to use</div>
                <div class="p">Voice Recorder is completely free. No hidden payments, activation fees, or charges for extra features.</div>
                <br /><br />
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
        <div class="block auto_trim">
            <img src="//static.123apps.com/i/index_blocks/auto_trim.svg" alt="Auto silence trimming" class="title-image">
            <div class="cnt">
                <div class="h">Auto silence trimming</div>
                <div class="p">
                    Voice Recorder automatically detects silent fragments at the beginning and the end of your recording and deletes them for your convenience.
                </div>
                <br /><br />
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
        <div class="block cut">
            <img src="//static.123apps.com/i/index_blocks/cut.svg" alt="Cut your recording" class="title-image">
            <div class="cnt">
                <div class="h">Cut your recording</div>
                <div class="p">After the recording is complete, you can crop it to the section you actually need.</div>
                <br /><br /><br /><br />
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
        <div class="block secure">
            <img src="//static.123apps.com/i/index_blocks/secure.svg" alt="Privacy guaranteed" class="title-image">
            <div class="cnt">
                <div class="h">Privacy guaranteed</div>
                <div class="p">
                    We guarantee that our app is secure. Everything you record is accessible to you alone: nothing is uploaded to our servers for storage.
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
        <div class="block settings">
            <img src="//static.123apps.com/i/index_blocks/settings.svg" alt="Microphone settings" class="title-image">
            <div class="cnt">
                <div class="h">Microphone settings</div>
                <div class="p">You can adjust your microphone settings using standard Adobe Flash Player tools (decreasing echo and adjusting the volume).</div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
        <br /><br />
    </div>
    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
        <br /><br />
    </div>
</div>
<script src="~/Scripts/myrecorder.js"></script>
<script>
    URL = window.URL || window.webkitURL;
    var gumStream;
    var rec;
    var input;

    var AudioContext = window.AudioContext || window.webkitAudioContext;
    var audioContext

    var recordButton = document.getElementById("recordButton");
    var stopButton = document.getElementById("stopButton");
    var pauseButton = document.getElementById("pauseButton");

    recordButton.addEventListener("click", startRecording);
    stopButton.addEventListener("click", stopRecording);
    pauseButton.addEventListener("click", pauseRecording);

    function startRecording() {
        console.log("recordButton clicked");
        if ($("ol#recordingsList li").length > 0) {
            if (confirm('Are you sure you want to delete this audio?')) {
                recordingsList.removeChild(recordingsList.childNodes[0]);
            } else {
                return;
            }
        }

        https://addpipe.com/blog/audio-constraints-getusermedia/
        var constraints = { audio: true, video: false }

        recordButton.disabled = true;
        stopButton.disabled = false;
        pauseButton.disabled = false
        https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia
        navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {
            console.log("getUserMedia() success, stream created, initializing Recorder.js ...");

            audioContext = new AudioContext();
            document.getElementById("formats").innerHTML = audioContext.sampleRate / 1000 + "kHz"
            gumStream = stream;
            input = audioContext.createMediaStreamSource(stream);
            rec = new Recorder(input, { numChannels: 1 })
            rec.record()
            console.log("Recording started");

        }).catch(function (err) {
            recordButton.disabled = false;
            stopButton.disabled = true;
            pauseButton.disabled = true
        });
    }

    function pauseRecording() {
        console.log("pauseButton clicked rec.recording=", rec.recording);
        if (rec.recording) {
            rec.stop();
            pauseButton.innerHTML = "Resume";
        } else {
            rec.record()
            pauseButton.innerHTML = "Pause";

        }
    }

    function stopRecording() {
        console.log("stopButton clicked");

        stopButton.disabled = true;
        recordButton.disabled = false;
        pauseButton.disabled = true;

        pauseButton.innerHTML = "Pause";
        rec.stop();
        gumStream.getAudioTracks()[0].stop();
        rec.exportWAV(createDownloadLink);
    }

    function createDownloadLink(blob) {

        var url = URL.createObjectURL(blob);
        var au = document.createElement('audio');
        var li = document.createElement('li');
        var link = document.createElement('a');

        var filename = new Date().toISOString();
        au.controls = true;
        au.src = url;

        link.href = url;
        link.download = filename + ".wav";
        link.innerHTML = "<span class='btn btn-success'>Save</span>";

        li.appendChild(au);
        li.appendChild(document.createTextNode(filename + ".wav "))
        //li.appendChild(link);

        var upload = document.createElement('a');
        upload.href = "";
        upload.innerHTML = "<span class='btn btn-success'>Save</span>";
        upload.addEventListener("click", function (event) {
            var xhr = new XMLHttpRequest();
            xhr.onload = function (e) {
                if (this.readyState === 4) {
                    console.log("Server returned: ", e.target.responseText);
                }
            };
            var fd = new FormData();
            fd.append("data", blob, filename);
            xhr.open("POST", "/", false);
            xhr.send(fd);
        })
        li.appendChild(upload)//add the upload link to li

        recordingsList.appendChild(li);
    }
</script>